#!/usr/bin/ruby
require 'find'
require 'fileutils'

# all_languages = ["ar-SA", "ca", "cs", "da", "de-DE", "el", "en-AU", "en-CA", "en-GB", "en-US", "es-ES", "es-MX", "fi", "fr-CA", "fr-FR", "he", "hi", "hr", "hu", "id", "it", "ja", "ko", "ms", "nl-NL", "no", "pl", "pt-BR", "pt-PT", "ro", "ru", "sk", "sv", "th", "tr", "uk", "vi", "zh-Hant"]
dsFile = "./fastlane/screenshots/"
dmFile = "./fastlane/metadata"

def getAllLanguages
    afile = IO.readlines("Languagefile")
    ix = 0
    lanuguagesAry = []
    for i in afile do
        if i.include? "languages(["
            ix = afile.index(i)
        end
        if ix > 0 
            if i.include? "])"
                break
            end
            dd = i.split(',')[0]
            # puts dd
            if !(dd.include? "#") && (dd.include? "\"")
                # puts i.split(',')[0]
                language = eval(i.split(',')[0])
                lanuguagesAry.push(language)
            end
        end
    end
    if lanuguagesAry.empty?
        puts "\033[41m---请在Languagefile文件中解注释多语言---\033[0m"
        exit #没有主语无法进行
    else
        # puts "---获取到多语言为#{lanuguagesAry.length}个----"
        return lanuguagesAry
    end
end

languages = getAllLanguages

def trans(path,tagLanguage,tagTxt,mainLanguage)
    cntent = `trans :#{tagLanguage} file://fastlane/metadata/#{mainLanguage}/#{tagTxt}.txt`
    if cntent.length < 10
        puts "\033[31m#{tagTxt}翻译失败，使用默认值\033[0m"
        cntent = File.read("fastlane/metadata/#{mainLanguage}/#{tagTxt}.txt")
    end
    tagPath = path + "/#{tagTxt}.txt"
    File.new(tagPath,"w").syswrite(cntent)
    puts "-------写入#{tagTxt}文件完成---------"
    # sleep(3) #频繁操作翻译会限制 ip
end

def copyImage (languagesArr,mainLanguage,dsFile,dmFile,trType)
    for i in languagesArr do
        next if i == mainLanguage
        #创建元数据文件夹，并复制主数据文件内容
        df = "#{dmFile + "/" + i}"
        mp = dmFile + "/" + mainLanguage
        if !(Dir.exists? df)
            # Dir.mkdir df
            FileUtils.cp_r mp,df
        end

        #开始翻译到新建文件
        puts "------正在翻译内容-----"
        tagDescription = "description"
        tagRelease_notes = "release_notes"
        tagLanguage = i[0,2] #翻译对应的语言
        puts "目标语言代码#{tagLanguage}"
        #只翻译描述
        if trType == 1 
            trans df,tagLanguage,tagDescription,mainLanguage
        elsif trType == 2
            #更新记录不为空就翻译
            if !File.zero?("fastlane/metadata/#{mainLanguage}/#{tagRelease_notes}.txt")
                trans df,tagLanguage,tagRelease_notes,mainLanguage
            else
                puts "\033[31m-----#{tagRelease_notes}.txt内容为空------\033[0m"
            end
        else 
            #更新记录和描述都翻译
            trans df,tagLanguage,tagDescription,mainLanguage
            if !File.zero?("fastlane/metadata/#{mainLanguage}/#{tagRelease_notes}.txt")
                trans df,tagLanguage,tagRelease_notes,mainLanguage
            end
        end

        #创建屏幕截图文件夹
        mf = "#{dsFile + "/" + i}"
        if !(Dir.exists? mf)
            Dir.mkdir mf
        end
        #copy 图片到目标语言
        defPath = "#{dsFile + mainLanguage}"
        Dir.glob("#{defPath}/*.png") do |file|
            FileUtils.cp "#{file}",mf
        end
    end  
end

def getMainLanguage
    afile = IO.readlines("./fastlane/Snapfile")
    ix = 0
    mainLanuguages = ""
    for i in afile do
        if i.include? "languages(["
            ix = afile.index(i)
        end
        if ix > 0 
            if i.include? "])"
                break
            end
            dd = i.split(',')[0]
            if !(dd.include? "#") && (dd.include? "\"")
                # puts i.split(',')[0]
                mainLanuguages = eval(i.split(',')[0])
            end
        end
    end
    if mainLanuguages.empty?
        puts "\033[31m---获取主语言失败,检查 Snapfile 文件内容\033[0m"
        exit #没有主语无法进行
    else
        puts "\033[33m---获取到主语言为#{mainLanuguages}\033[0m"
        return mainLanuguages
    end
end
#获取主语言
mainLanguage = getMainLanguage
mainLanuguagesFilePath = dsFile + mainLanguage
puts "\033[33m主语言路径 #{mainLanuguagesFilePath}\033[0m"

if !Dir.exists?(mainLanuguagesFilePath)
    puts "\033[31m---请在#{dsFile}文件夹下创建#{mainLanguage}文件夹---\033[0m"
    return
end
if Dir["#{mainLanuguagesFilePath}/*"].empty?
    puts "\033[31m---请在#{mainLanuguagesFilePath}文件夹下放入屏幕截图---\033[0m"
    return
end

puts "\033[33m------添加 #{languages.length} 个多语言------\033[0m\n"
puts "\033[33m------请选择要翻译的内容------\033[0m\n"
puts "\033[33m 1.描述 \033[0m\n"
puts "\033[33m 2.更新说明 \033[0m\n"
puts "\033[33m 3.描述和更新说明 \033[0m\n"
puts "\033[33m请输入对应数字并回车------\033[0m\n"
y = gets.chomp.to_i
if !([1,2,3].include? y)
    puts "\033[41m 请输入对应数字 \033[0m"
    exit
else
    copyImage languages,mainLanguage,dsFile,dmFile,y
end
puts "\033[32m------操作完成;添加 #{languages.length} 个多语言------\033[0m"
puts "\033[33m 如果需要对多语言做修改，请前去修改\n 输入回车开始上传内容\033[0m\n"
y = gets.chomp
exec "fastlane deliver screenshots --overwrite --force"









